# 2017-11-28 16:05:48.468451
# SECTION: 02_functions
# TEST: 34
# INFO: Print chr with double
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ILABEL at line: 2 with following arguments:
# Executing instruction: ICREATEFRAME at line: 3 with following arguments:
# Executing instruction: IPUSHFRAME at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 7 with following arguments:
# Arg1: Const@=58.5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 8 with following arguments:
# Arg1: Stack@=58.5(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=GHGHGKGHGGHUILTZGFFG(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 13 with following arguments:
# Arg1: Stack@=GHGHGKGHGGHUILTZGFFG(string)
# Dest: LF@b=(string)
# Executing instruction: ICLEARS at line: 14 with following arguments:
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: TF@&retval_function
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@$value
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: LF@a=58.5(double)
# Dest: TF@$value()
# Executing instruction: IFLOAT2R2OINT at line: 19 with following arguments:
# Arg1: TF@$value=58.5(double)
# Dest: TF@$value=58.5(double)
# Executing instruction: IINT2CHAR at line: 20 with following arguments:
# Arg1: TF@$value=59(int)
# Dest: TF@&retval_function()
# Executing instruction: IMOVE at line: 21 with following arguments:
# Arg1: TF@&retval_function=;(string)
# Dest: LF@b=GHGHGKGHGGHUILTZGFFG(string)
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@b=;(string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 23 with following arguments:
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: TF@$retval_expr
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=;(string)
# Dest: TF@$retval_expr()
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: TF@$retval_expr=;(string)
# Executing instruction: ICLEARS at line: 27 with following arguments:
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: TF@&retval_function
# Executing instruction: IDEFVAR at line: 30 with following arguments:
# Dest: TF@$value
# Executing instruction: IMOVE at line: 31 with following arguments:
# Arg1: Const@=40.3(double)
# Dest: TF@$value()
# Executing instruction: IFLOAT2R2OINT at line: 32 with following arguments:
# Arg1: TF@$value=40.3(double)
# Dest: TF@$value=40.3(double)
# Executing instruction: IINT2CHAR at line: 33 with following arguments:
# Arg1: TF@$value=40(int)
# Dest: TF@&retval_function()
# Executing instruction: IMOVE at line: 34 with following arguments:
# Arg1: TF@&retval_function=((string)
# Dest: LF@b=;(string)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=((string)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@$retval_expr
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=((string)
# Dest: TF@$retval_expr()
# Executing instruction: IWRITE at line: 39 with following arguments:
# Arg1: TF@$retval_expr=((string)
# Executing instruction: ICLEARS at line: 40 with following arguments:
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# -:(
# +;(

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# 
#   1: ' Print chr with double
#   2: 
#   3: scope
#   4:     dim a as double = 58.5
#   5:     
#   6:     dim b as string
#   7:     b = !"GHGHGKGHGGHUILTZGFFG"
#   8:     b = chr(a)
#   9:     
#  10:     print b;
#  11:     
#  12:     b = chr(40.3)
#  13:     
#  14:     print b;
#  15:     
#  16: end scope

########################################

.IFJcode17                                                                      #     1/40
LABEL &&&scope                                                                  #     2/40
CREATEFRAME                                                                     #     3/40
PUSHFRAME                                                                       #     4/40
DEFVAR LF@a                                                                     #     5/40
MOVE LF@a float@0.0                                                             #     6/40
PUSHS float@58.5                                                                #     7/40
POPS LF@a                                                                       #     8/40
CLEARS                                                                          #     9/40
DEFVAR LF@b                                                                     #    10/40
MOVE LF@b string@                                                               #    11/40
PUSHS string@GHGHGKGHGGHUILTZGFFG                                               #    12/40
POPS LF@b                                                                       #    13/40
CLEARS                                                                          #    14/40
CREATEFRAME                                                                     #    15/40
DEFVAR TF@&retval_function                                                      #    16/40
DEFVAR TF@$value                                                                #    17/40
MOVE TF@$value LF@a                                                             #    18/40
FLOAT2R2OINT TF@$value TF@$value                                                #    19/40
INT2CHAR TF@&retval_function TF@$value                                          #    20/40
MOVE LF@b TF@&retval_function                                                   #    21/40
PUSHS LF@b                                                                      #    22/40
CREATEFRAME                                                                     #    23/40
DEFVAR TF@$retval_expr                                                          #    24/40
POPS TF@$retval_expr                                                            #    25/40
WRITE TF@$retval_expr                                                           #    26/40
CLEARS                                                                          #    27/40
CREATEFRAME                                                                     #    28/40
DEFVAR TF@&retval_function                                                      #    29/40
DEFVAR TF@$value                                                                #    30/40
MOVE TF@$value float@40.3                                                       #    31/40
FLOAT2R2OINT TF@$value TF@$value                                                #    32/40
INT2CHAR TF@&retval_function TF@$value                                          #    33/40
MOVE LF@b TF@&retval_function                                                   #    34/40
PUSHS LF@b                                                                      #    35/40
CREATEFRAME                                                                     #    36/40
DEFVAR TF@$retval_expr                                                          #    37/40
POPS TF@$retval_expr                                                            #    38/40
WRITE TF@$retval_expr                                                           #    39/40
CLEARS                                                                          #    40/40