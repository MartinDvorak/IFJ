# 2017-11-28 16:05:48.457962
# SECTION: 02_functions
# TEST: 32
# INFO: Double constant into build-in function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ILABEL at line: 2 with following arguments:
# Executing instruction: ICREATEFRAME at line: 3 with following arguments:
# Executing instruction: IPUSHFRAME at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 7 with following arguments:
# Arg1: Const@=3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 8 with following arguments:
# Arg1: Stack@=3(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@i
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@j
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@j()
# Executing instruction: ICREATEFRAME at line: 14 with following arguments:
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: TF@&retval_function
# Executing instruction: IMOVE at line: 16 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@&retval_function()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@$position
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: LF@a=3(double)
# Dest: TF@$position()
# Executing instruction: IFLOAT2R2OINT at line: 19 with following arguments:
# Arg1: TF@$position=3(double)
# Dest: TF@$position=3(double)
# Executing instruction: ISUB at line: 20 with following arguments:
# Arg1: TF@$position=3(int)
# Arg2: Const@=1(int)
# Dest: TF@$position=3(int)
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: TF@$position=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 23 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: TF@$str_len
# Executing instruction: ISTRLEN at line: 25 with following arguments:
# Arg1: Const@=a(string)
# Dest: TF@$str_len()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: TF@$position=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: TF@$str_len=1(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 28 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: INOTS at line: 29 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 30 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 32 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IMOVE at line: 35 with following arguments:
# Arg1: TF@&retval_function=0(int)
# Dest: LF@i=0(int)
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@&retval_function
# Executing instruction: IMOVE at line: 38 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@&retval_function()
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: TF@$position
# Executing instruction: IMOVE at line: 40 with following arguments:
# Arg1: Const@=3(double)
# Dest: TF@$position()
# Executing instruction: IFLOAT2R2OINT at line: 41 with following arguments:
# Arg1: TF@$position=3(double)
# Dest: TF@$position=3(double)
# Executing instruction: ISUB at line: 42 with following arguments:
# Arg1: TF@$position=3(int)
# Arg2: Const@=1(int)
# Dest: TF@$position=3(int)
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: TF@$position=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 45 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 46 with following arguments:
# Dest: TF@$str_len
# Executing instruction: ISTRLEN at line: 47 with following arguments:
# Arg1: Const@=ERTZUG(string)
# Dest: TF@$str_len()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: TF@$position=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: TF@$str_len=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 50 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: INOTS at line: 51 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 52 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 54 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ISTRI2INT at line: 55 with following arguments:
# Arg1: Const@=ERTZUG(string)
# Arg2: TF@$position=2(int)
# Dest: TF@&retval_function=0(int)
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IMOVE at line: 57 with following arguments:
# Arg1: TF@&retval_function=84(int)
# Dest: LF@j=0(int)
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@i=0(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 59 with following arguments:
# Executing instruction: IDEFVAR at line: 60 with following arguments:
# Dest: TF@$retval_expr
# Executing instruction: IPOPS at line: 61 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@$retval_expr()
# Executing instruction: IWRITE at line: 62 with following arguments:
# Arg1: TF@$retval_expr=0(int)
# Executing instruction: ICLEARS at line: 63 with following arguments:
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@j=84(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 65 with following arguments:
# Executing instruction: IDEFVAR at line: 66 with following arguments:
# Dest: TF@$retval_expr
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=84(int)
# Dest: TF@$retval_expr()
# Executing instruction: IWRITE at line: 68 with following arguments:
# Arg1: TF@$retval_expr=84(int)
# Executing instruction: ICLEARS at line: 69 with following arguments:
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 103 84
# + 0 84

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# 
#   1: ' Double constant into build-in function
#   2: 
#   3: scope
#   4:     dim a as double = 3.0
#   5:     
#   6:     dim i as integer
#   7:     dim j as integer
#   8:     i = asc(!"gzgfggffg", a)
#   9:     j = asc(!"ERTZUG", 3.0)
#  10:     
#  11:     print i;j;
#  12:     
#  13: end scope

########################################

.IFJcode17                                                                      #     1/69
LABEL &&&scope                                                                  #     2/69
CREATEFRAME                                                                     #     3/69
PUSHFRAME                                                                       #     4/69
DEFVAR LF@a                                                                     #     5/69
MOVE LF@a float@0.0                                                             #     6/69
PUSHS float@3                                                                   #     7/69
POPS LF@a                                                                       #     8/69
CLEARS                                                                          #     9/69
DEFVAR LF@i                                                                     #    10/69
MOVE LF@i int@0                                                                 #    11/69
DEFVAR LF@j                                                                     #    12/69
MOVE LF@j int@0                                                                 #    13/69
CREATEFRAME                                                                     #    14/69
DEFVAR TF@&retval_function                                                      #    15/69
MOVE TF@&retval_function int@0                                                  #    16/69
DEFVAR TF@$position                                                             #    17/69
MOVE TF@$position LF@a                                                          #    18/69
FLOAT2R2OINT TF@$position TF@$position                                          #    19/69
SUB TF@$position TF@$position int@1                                             #    20/69
PUSHS TF@$position                                                              #    21/69
PUSHS int@0                                                                     #    22/69
LTS                                                                             #    23/69
DEFVAR TF@$str_len                                                              #    24/69
STRLEN TF@$str_len string@a                                                     #    25/69
PUSHS TF@$position                                                              #    26/69
PUSHS TF@$str_len                                                               #    27/69
LTS                                                                             #    28/69
NOTS                                                                            #    29/69
ORS                                                                             #    30/69
PUSHS bool@true                                                                 #    31/69
JUMPIFEQS $wrong_index_0                                                        #    32/69
STRI2INT TF@&retval_function string@a TF@$position                              #    33/69
LABEL $wrong_index_0                                                            #    34/69
MOVE LF@i TF@&retval_function                                                   #    35/69
CREATEFRAME                                                                     #    36/69
DEFVAR TF@&retval_function                                                      #    37/69
MOVE TF@&retval_function int@0                                                  #    38/69
DEFVAR TF@$position                                                             #    39/69
MOVE TF@$position float@3                                                       #    40/69
FLOAT2R2OINT TF@$position TF@$position                                          #    41/69
SUB TF@$position TF@$position int@1                                             #    42/69
PUSHS TF@$position                                                              #    43/69
PUSHS int@0                                                                     #    44/69
LTS                                                                             #    45/69
DEFVAR TF@$str_len                                                              #    46/69
STRLEN TF@$str_len string@ERTZUG                                                #    47/69
PUSHS TF@$position                                                              #    48/69
PUSHS TF@$str_len                                                               #    49/69
LTS                                                                             #    50/69
NOTS                                                                            #    51/69
ORS                                                                             #    52/69
PUSHS bool@true                                                                 #    53/69
JUMPIFEQS $wrong_index_1                                                        #    54/69
STRI2INT TF@&retval_function string@ERTZUG TF@$position                         #    55/69
LABEL $wrong_index_1                                                            #    56/69
MOVE LF@j TF@&retval_function                                                   #    57/69
PUSHS LF@i                                                                      #    58/69
CREATEFRAME                                                                     #    59/69
DEFVAR TF@$retval_expr                                                          #    60/69
POPS TF@$retval_expr                                                            #    61/69
WRITE TF@$retval_expr                                                           #    62/69
CLEARS                                                                          #    63/69
PUSHS LF@j                                                                      #    64/69
CREATEFRAME                                                                     #    65/69
DEFVAR TF@$retval_expr                                                          #    66/69
POPS TF@$retval_expr                                                            #    67/69
WRITE TF@$retval_expr                                                           #    68/69
CLEARS                                                                          #    69/69