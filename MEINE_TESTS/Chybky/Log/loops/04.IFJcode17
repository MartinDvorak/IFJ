# 2017-11-29 12:53:23.697530
# SECTION: 06_loops
# TEST: 04
# INFO: nested and mutliple while loop
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ILABEL at line: 2 with following arguments:
# Executing instruction: ICREATEFRAME at line: 3 with following arguments:
# Executing instruction: IPUSHFRAME at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=123.789(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@$tmp1l_0
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=123.789(double)
# Dest: LF@$tmp1l_0()
# Executing instruction: IINT2FLOATS at line: 13 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: LF@$tmp1l_0=123.789(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 15 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=123.789(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=-123.789(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 17 with following arguments:
# Executing instruction: ILABEL at line: 18 with following arguments:
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=236.741(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@$tmp1l_1
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=236.741(double)
# Dest: LF@$tmp1l_1()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@$tmp1l_1=236.741(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=236.741(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 27 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=-236.741(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 29 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=9(double)
# Dest: LF@b=0(double)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=9(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=9(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=9(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=7.877(double)
# Dest: LF@b=9(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=7.877(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=7.877(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=7.877(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=7.877(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=6.754(double)
# Dest: LF@b=7.877(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=6.754(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=6.754(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=6.754(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=6.754(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Dest: LF@b=6.754(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=5.630999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=5.630999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=5.630999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Dest: LF@b=5.630999999999999(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=4.507999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=4.507999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=4.507999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Dest: LF@b=4.507999999999999(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=3.384999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=63(int)
# Dest: Stack@()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@expr
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=63(int)
# Dest: TF@expr()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: TF@expr=63(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@b=3.384999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: Const@=1.123(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 48 with following arguments:
# Arg1: Stack@=3.384999999999999(double)
# Arg2: Stack@=1.123(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=2.261999999999999(double)
# Dest: LF@b=3.384999999999999(double)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=2.261999999999999(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=3.02(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 37 with following arguments:
# Arg1: Stack@=2.261999999999999(double)
# Arg2: Stack@=3.02(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 52 with following arguments:
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: LF@a=-123.789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 56 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 57 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=-123.789(double)
# Arg2: Stack@=-247.578(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=-371.367(double)
# Dest: LF@a=-123.789(double)
# Executing instruction: ICLEARS at line: 60 with following arguments:
# Executing instruction: IJUMP at line: 61 with following arguments:
# Executing instruction: ILABEL at line: 18 with following arguments:
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@a=-371.367(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=236.741(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@$tmp1l_1
# Error at line: 22
# Symbol already exists!
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 63 63 63 63 63 63 57 57 57 57 57
# + 63 63 63 63 63 63

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' nested and mutliple while loop
#   2: scope
#   3: 	dim a as double
#   4: 	dim b as double
#   5: 	a = 0 - 123.789
#   6: 	do while a > (0 - 236.741)
#   7: 		b = 9
#   8: 		do while b > 3.02
#   9: 			print 63;
#  10: 			b = b - 1.123
#  11: 		loop
#  12: 		a = a + a * 2
#  13: 	loop
#  14: 	a = 78
#  15: 	do while a > 55
#  16: 		print 57;
#  17: 		a = a - 5.38
#  18: 	loop
#  19: end scope

########################################

.IFJcode17                                                                      #     1/86
LABEL &&&scope                                                                  #     2/86
CREATEFRAME                                                                     #     3/86
PUSHFRAME                                                                       #     4/86
DEFVAR LF@a                                                                     #     5/86
MOVE LF@a float@0.0                                                             #     6/86
DEFVAR LF@b                                                                     #     7/86
MOVE LF@b float@0.0                                                             #     8/86
PUSHS int@0                                                                     #     9/86
PUSHS float@123.789                                                             #    10/86
DEFVAR LF@$tmp1l_0                                                              #    11/86
POPS LF@$tmp1l_0                                                                #    12/86
INT2FLOATS                                                                      #    13/86
PUSHS LF@$tmp1l_0                                                               #    14/86
SUBS                                                                            #    15/86
POPS LF@a                                                                       #    16/86
CLEARS                                                                          #    17/86
LABEL $loop_top_0                                                               #    18/86
PUSHS LF@a                                                                      #    19/86
PUSHS int@0                                                                     #    20/86
PUSHS float@236.741                                                             #    21/86
DEFVAR LF@$tmp1l_1                                                              #    22/86
POPS LF@$tmp1l_1                                                                #    23/86
INT2FLOATS                                                                      #    24/86
PUSHS LF@$tmp1l_1                                                               #    25/86
SUBS                                                                            #    26/86
GTS                                                                             #    27/86
PUSHS bool@true                                                                 #    28/86
JUMPIFNEQS $loop_end_0                                                          #    29/86
PUSHS int@9                                                                     #    30/86
INT2FLOATS                                                                      #    31/86
POPS LF@b                                                                       #    32/86
CLEARS                                                                          #    33/86
LABEL $loop_top_1                                                               #    34/86
PUSHS LF@b                                                                      #    35/86
PUSHS float@3.02                                                                #    36/86
GTS                                                                             #    37/86
PUSHS bool@true                                                                 #    38/86
JUMPIFNEQS $loop_end_1                                                          #    39/86
PUSHS int@63                                                                    #    40/86
CREATEFRAME                                                                     #    41/86
DEFVAR TF@expr                                                                  #    42/86
POPS TF@expr                                                                    #    43/86
WRITE TF@expr                                                                   #    44/86
CLEARS                                                                          #    45/86
PUSHS LF@b                                                                      #    46/86
PUSHS float@1.123                                                               #    47/86
SUBS                                                                            #    48/86
POPS LF@b                                                                       #    49/86
CLEARS                                                                          #    50/86
JUMP $loop_top_1                                                                #    51/86
LABEL $loop_end_1                                                               #    52/86
PUSHS LF@a                                                                      #    53/86
PUSHS LF@a                                                                      #    54/86
PUSHS int@2                                                                     #    55/86
INT2FLOATS                                                                      #    56/86
MULS                                                                            #    57/86
ADDS                                                                            #    58/86
POPS LF@a                                                                       #    59/86
CLEARS                                                                          #    60/86
JUMP $loop_top_0                                                                #    61/86
LABEL $loop_end_0                                                               #    62/86
PUSHS int@78                                                                    #    63/86
INT2FLOATS                                                                      #    64/86
POPS LF@a                                                                       #    65/86
CLEARS                                                                          #    66/86
LABEL $loop_top_2                                                               #    67/86
PUSHS LF@a                                                                      #    68/86
PUSHS int@55                                                                    #    69/86
INT2FLOATS                                                                      #    70/86
GTS                                                                             #    71/86
PUSHS bool@true                                                                 #    72/86
JUMPIFNEQS $loop_end_2                                                          #    73/86
PUSHS int@57                                                                    #    74/86
CREATEFRAME                                                                     #    75/86
DEFVAR TF@expr                                                                  #    76/86
POPS TF@expr                                                                    #    77/86
WRITE TF@expr                                                                   #    78/86
CLEARS                                                                          #    79/86
PUSHS LF@a                                                                      #    80/86
PUSHS float@5.38                                                                #    81/86
SUBS                                                                            #    82/86
POPS LF@a                                                                       #    83/86
CLEARS                                                                          #    84/86
JUMP $loop_top_2                                                                #    85/86
LABEL $loop_end_2                                                               #    86/86